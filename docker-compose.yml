version: '3.9'

networks:
  my_network:
    driver: bridge

services:

  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - '32181:32181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=32181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_SERVERS=zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    networks:
      - my_network

  zookeeper-2:
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - '32182:32182'
    environment:
      - ZOOKEEPER_CLIENT_PORT=32182
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SERVER_ID=2
      - ZOOKEEPER_SERVERS=zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    networks:
      - my_network

  zookeeper-3:
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - '32183:32183'
    environment:
      - ZOOKEEPER_CLIENT_PORT=32183
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SERVER_ID=3
      - ZOOKEEPER_SERVERS=zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    networks:
      - my_network


  kafka-1:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-1:32181,zookeeper-2:32182,zookeeper-3:32183
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_NUM_PARTITIONS=3
    networks:
      - my_network

  kafka-2:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - '9093:9093'
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-1:32181,zookeeper-2:32182,zookeeper-3:32183
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka-2:29093,EXTERNAL://localhost:9093
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_NUM_PARTITIONS=3
    networks:
      - my_network

  kafka-3:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - '9094:9094'
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-1:32181,zookeeper-2:32182,zookeeper-3:32183
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka-3:29094,EXTERNAL://localhost:9094
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_NUM_PARTITIONS=3
    networks:
      - my_network

  image-uploader:
    build:
      context: ./imageUploader
    environment:
      - ACCESS_KEY=test
      - SECRET_KEY=test
      - ENDPOINT=http://localstack:4566
      - S3_BUCKET=my-bucket
      - S3_REGION=us-east-1
      - KAFKA_TOPIC=image-topic
      - KAFKA_BROKERS=kafka-1:29092,kafka-2:29093,kafka-3:29094
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - localstack
    expose:
      - "8080"
    networks:
      - my_network
    restart: on-failure

  image-resizer:
    build:
      context: ./imageResizer
    environment:
      - ACCESS_KEY=test
      - SECRET_KEY=test
      - ENDPOINT=http://localstack:4566
      - S3_BUCKET=my-bucket
      - S3_REGION=us-east-1
      - KAFKA_TOPIC=image-topic
      - KAFKA_BROKERS=kafka-1:29092,kafka-2:29093,kafka-3:29094
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - localstack
    networks:
      - my_network
    restart: on-failure

  nginx:
    build: "./nginx"
    restart: always
    ports:
      - "80:80"
    depends_on:
      - image-uploader
    networks:
      - my_network

  localstack:
    container_name: "localstack"
    image: localstack/localstack:latest
    hostname: localstack
    environment:
      - SERVICES=s3 #AWS Services that you want in your localstack
      - DEBUG=1 # Debug level 1 if you want to logs, 0 if you want to disable
      - START_WEB=0 # Flag to control whether the Web UI should be started in Docker
      - LAMBDA_REMOTE_DOCKER=0
      - DATA_DIR=/tmp/localstack/data #  Local directory for saving persistent data(Example: es storage)
      - DEFAULT_REGION=us-east-1
    ports:
      - "4566:4566"
      - "8081:8080"
    volumes:
      - './.localstack:/var/lib/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
    healthcheck:
      test: [ "CMD-SHELL", "curl -sS http://localhost:8080/health | grep '^Ready'" ]
      interval: 5s
      retries: 10
    networks:
      - my_network
    restart: on-failure